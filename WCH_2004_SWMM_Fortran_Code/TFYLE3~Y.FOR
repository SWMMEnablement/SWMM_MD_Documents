      SUBROUTINE READTHRESH
CIM routine written by C. Moore 9/8/2000 to read and process
CIM threshold elevations in EXTRAN
      INCLUDE 'TAPES.INC'
      INCLUDE 'THRESHOLD.INC'
      INCLUDE 'CONTR.INC'
      CHARACTER*10 AJUNTHR(NEE)
C     INITIALIZE EVERYTHING
      NTRHESH = 0
      NJUNTHR = 0
      DO I = 1,MTHRESH
      THRESHID(I) = ''
      DO J = 1,NEE
      THRESH(I,J) = 0.0
      TFIRST(I,J) = 0.0
      TDUR(I,J) = 0.0
      ITCOUNT(I,J) = 0
      TLASTTIME(I,J) = .FALSE.
      ENDDO
      ENDDO
      DO J = 1,NEE
      JUNTHR(J) = 0.0
      AJUNTHR(J) = ''
      ENDDO


C     IF LINE IS NOT A BF THEN RETURN
      READ(N5,*) CC
      BACKSPACE (N5)
      IF (CC.NE.'D2') RETURN
      READ(N5,*) CC,NTHRESH,(THRESHID(I),I=1,NTHRESH)
C   WRITE HEADER FOR ECHO PRINT
      WRITE(N6,7000)
      WRITE(N6,7010) ALPHA1,ALPHA2
      IF(METRIC.EQ.1) THEN
      WRITE(N6,7020) NTHRESH,'FEET  ',(I,I=1,NTHRESH)
      WRITE(N6,7030) (THRESHID(I),I=1,NTHRESH)
Cwch, 2/15/01.  One extra set of dashes.
      WRITE(N6,7040) ('----------',I=1,NTHRESH+1)
      ELSE
      WRITE(N6,7020) NTHRESH,'METERS',(I,I=1,NTHRESH)
      WRITE(N6,7030) (THRESHID(I),I=1,NTHRESH)
      WRITE(N6,7040) ('----------',I=1,NTHRESH+1)
      ENDIF
c   TRY TO READ D3 LINE.  GIVE ERROR IF NEXT LINE IS NOT D3
      READ(N5,*) CC
      BACKSPACE (N5)
      IF (CC.NE.'D3') THEN
      WRITE(N6,7050) CC
      STOP 'ERROR - DID NOT FIND D3 LINE'
      ENDIF
      NJUNTHR = 0
  100 CONTINUE
      READ(N5,*) CC
      BACKSPACE (N5)
      IF (CC.NE.'D3') RETURN
      NJUNTHR = NJUNTHR + 1
      IF (JCE.EQ.0) THEN
      READ(N5,*)  CC,JUNTHR(NJUNTHR),(THRESH(I,NJUNTHR),I=1,NTHRESH)
      WRITE(N6,7060) JUNTHR(NJUNTHR),(THRESH(I,NJUNTHR),I=1,NTHRESH)
      ELSE
      READ(N5,*) CC,AJUNTHR(NJUNTHR),(THRESH(I,NJUNTHR),I=1,NTHRESH)
      WRITE(N6,7070)AJUNTHR(NJUNTHR),(THRESH(I,NJUNTHR),I=1,NTHRESH)
      ENDIF
C     NOW RELATE JUNTHR AND AJUNTHR TO INTERNAL JUNCTION NUMBER
C     USES GETJUN SUBROUTINE CONTAINED IN WASP.FOR
      CALL GETJUN(NUMB,JUNTHR(NJUNTHR),AJUNTHR(NJUNTHR))
      JUNTHR(NJUNTHR) = NUMB
C     IF THRESH = -99.9 THEN SET TO A BIG NUMBER
      DO I=1,NTHRESH
      IF (THRESH(I,NJUNTHR).EQ.-99.9) THRESH(I,NJUNTHR) = 9.9E+32
      ENDDO
C     GO BACK AND READ NEXT LINE
      GO TO 100
 7000 FORMAT(/,
     1       '1',40(2H--)/' ','ENVIRONMENTAL PROTECTION AGENCY',13X,40H*
     2***   EXTENDED TRANSPORT PROGRAM   ****,8X,'WATER RESOURCES DIVISI
     3ON',/,' ','WASHINGTON, D.C.            ',16X,4H****,32X,4H****,8X,
     4'CAMP DRESSER & MCKEE INC.',/,' ','                ',28X,4H****,
     56X,'   ANALYSIS MODULE  ',6X,4H****,8X,'ANNANDALE, VIRGINIA')
 7010 FORMAT(/,5X,A80,/,5X,A80,/)
 7020 FORMAT(//,
     1' *****************************************************',/,
     2' *         JUNCTION ELEVATION SUMMARY DATA           *',/,
     3' *****************************************************',//,
     45X,'JUNCTION ELEVATION SUMMARY DATA WILL BE PREPARED FOR ',I3,
     5' ELEVATIONS',//,17X,'ELEVATION IN ',A6,/
     67X,' JUNCTION ',100I12)
 7030 FORMAT(7X,'    ID        ',100(A12))
 7040 FORMAT(7X,101(2X,A10))
 7050 FORMAT(3X,' ERROR ===> LOOKING FOR D3 LINE BUT FOUND ',A2,
     A' INSTEAD')
 7060 FORMAT(7X,I10,100(2X,F10.2))
 7070 FORMAT(7X,A10,100(2X,F10.2))
      END SUBROUTINE READTHRESH

      SUBROUTINE COMPTHRESH
      INCLUDE 'TAPES.INC'
      INCLUDE 'THRESHOLD.INC'
      INCLUDE 'CONTR.INC'
      INCLUDE 'JUNC.INC'
      IF (NJUNTHR.EQ.0) RETURN
      DO ITJ = 1,NJUNTHR
      JTJ = JUNTHR(ITJ)
      DO ITHR = 1,NTHRESH
      IF((Y(JTJ) + Z(JTJ)).GT.THRESH(ITHR,ITJ)) THEN
      IF (ITCOUNT(ITHR,ITJ).EQ.0) TFIRST(ITHR,ITJ) = time/3600.0
      TDUR(ITHR,ITJ) = TDUR(ITHR,ITJ) + DELT/3600.0
      IF (.NOT.TLASTTIME(ITHR,ITJ)) ITCOUNT(ITHR,ITJ) = 
     1ITCOUNT(ITHR,ITJ) + 1
      TLASTTIME(ITHR,ITJ) = .TRUE.
      ELSE
      TLASTTIME(ITHR,ITJ) = .FALSE.
      ENDIF
      ENDDO
      ENDDO
      RETURN
      END SUBROUTINE COMPTHRESH

      SUBROUTINE WRTETHRESH
      INCLUDE 'TAPES.INC'
      INCLUDE 'THRESHOLD.INC'
      INCLUDE 'CONTR.INC'
      INCLUDE 'JUNC.INC'
      INCLUDE 'OUT.INC'
      CHARACTER*2 AUNIT
      character*2 stillin(nee)
      logical wasin
      IF (NJUNTHR.EQ.0) RETURN
      WRITE(N6,5000) ALPHA1,ALPHA2
      WRITE(N6,5010)
      IF (METRIC.EQ.1) THEN
      AUNIT = 'FT'
      ELSE
      AUNIT = ' M'
      ENDIF
      DO I=1,NJUNTHR
      DO J=1,NTHRESH
      IF (THRESH(J,I).GT. 9.0E+32) THRESH(J,I) = 0.0
      ENDDO
      ENDDO
      wasin =.false.
      DO 200 ITABLE = 1,NJUNTHR,15
      JMAX = MIN0(15+ITABLE-1,NJUNTHR)
      IF (JCE.EQ.0) THEN
      WRITE(N6,5020) (JUN(JUNTHR(I)),I=ITABLE,JMAX)
      WRITE(N6,5030) ('----------',I=ITABLE,JMAX)
      ELSE
      WRITE(N6,5030) (AJUN(JUNTHR(I)),I=ITABLE,JMAX)
      WRITE(N6,5030) ('----------',I=ITABLE,JMAX)
      ENDIF
      WRITE(N6,5040) AUNIT,(DEPMAX(JUNTHR(I)),
     A               I=ITABLE,JMAX)
      WRITE(N6,5050) (IDHR(JUNTHR(I))+IDMIN(JUNTHR(I))/60.0,
     A               I=ITABLE,JMAX)
      DO 100 J=1,NTHRESH
      WRITE(N6,5060) THRESHID(J)
      WRITE(N6,5070) AUNIT,(THRESH(J,I),I=ITABLE,JMAX)
      WRITE(N6,5080) (TFIRST(J,I),I=ITABLE,JMAX)
      WRITE(N6,5090) (TDUR(J,I),I=ITABLE,JMAX)
      DO I = ITABLE,JMAX
      IF (TLASTTIME(j,i)) then
         STILLIN(I) = '* '
      wasin = .true.
      else
         stillin(i) = '  '
      ENDIF
      ENDDO
      WRITE(N6,5100) (Stillin(i),ITCOUNT(J,I),I=ITABLE,JMAX)
  100 CONTINUE
  200 CONTINUE
      If (wasin) write(n6,5200)
      RETURN
 5000 FORMAT(1H1/,5X,A80,/,5X,A80,/)
 5010 FORMAT(//,5X,78('*'),/,5X,'* J U N C T I O N   E L E V A T I O N',
     A'   S U M M A R Y   S T A T I S T I C S  *',/,5X,78('*'),/)
 5020 FORMAT(/,25X,15(2X,I10))
 5030 FORMAT(/,25X,15(2X,A10))
 5040 FORMAT('MAXIMUM ELEVATION (',A2,')',3X,15F12.2)
 5050 FORMAT('TIME OF MAXIMUM (HRS)',4X,15F12.3)
 5060 FORMAT(/,A12)
 5070 FORMAT('THRESHOLD ELEVATION (',A2,') ',15F12.2)
 5080 FORMAT('TIME FIRST EXCEEDED (HRS)',15F12.3)
 5090 FORMAT('TOTAL DURATION (HRS)',5X,15F12.3)
 5100 FORMAT('NUMBER OF EVENTS',9X,15(5X,A2,I5))
 5200 FORMAT(//,5X,'* - INDICATES THAT HGL ELEVATION AT JUNCTION WAS',
     a' GREATER THAN THE CORRESPONDING TRESHOLD ELEVATION ',
     b'AT THE END OF THE SIMULATION')
      END SUBROUTINE WRTETHRESH

